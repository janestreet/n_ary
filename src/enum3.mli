(*_ This file is automatically generated.  Do not edit it directly. *)

(** Defines an enumeration type with 3 constructors. We refer to each constructor as a
    "case". Cases and their respective [int] values are numbered consecutively starting at
    zero. *)

open! Base

type t =
  | Case0
  | Case1
  | Case2
[@@deriving compare, enumerate, equal, hash, sexp_of]

(** Constants **)

val case0 : t
val case1 : t
val case2 : t

(** Predicates *)

val is_case0 : t -> bool
val is_case1 : t -> bool
val is_case2 : t -> bool

(** Conversions to and from [int] **)

val to_int : t -> int
val of_int : int -> t option
val of_int_exn : int -> t
